# NAMESPACE
apiVersion: v1
kind: Namespace
metadata:
  name: monolito
  labels:
    name: monolito
---
# CONFIG MAP
apiVersion: v1
kind: ConfigMap
metadata:
  name: quickbite-cm
  namespace: monolito
data:
  ASPNETCORE_ENVIRONMENT: Staging
  ASPNETCORE_URLS: http://+:80
--- 
# SECRET
apiVersion: v1
kind: Secret
metadata:
  name: quickbite-sc
  namespace: monolito
type: Opaque
stringData:
  Mongo__ConnectionString: mongodb://admin:mongodbk8sHml@mongodb-svc-cip.database.svc.cluster.local:27017
  Mongo__DatabaseName: QuickBiteStaging
---
# DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: monolito
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quickbite-app
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: quickbite-app
      labels:
        app: quickbite-app
    spec:
      # imagePullSecrets:
      # - name: regcred
      containers:
      - name: quickbite-app
        image: rickalbbraga/quickbite:latest
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 80
          #   initialDelaySeconds: 60
          #   periodSeconds: 15
          #   failureThreshold: 3
          #   successThreshold: 1
          # readinessProbe:
          #   httpGet:
          #     path: /ready
          #     port: 80
          #   initialDelaySeconds: 15
          #   timeoutSeconds: 15
          #   periodSeconds: 10
          #   successThreshold: 2
          #   failureThreshold: 1
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: quickbite-cm
        - secretRef:
            name: quickbite-sc
--- 
# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: quickbite-svc-cip
  namespace: monolito
spec:
  type: ClusterIP
  selector:
    app: quickbite-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: monolito
  annotations:
    cert-manager.io/issuer: "letsencrypt-homolog"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - quickbite.com.br
    secretName: letsencrypt-quickbite-cert
  rules:
    - host: quickbite.com.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: quickbite-svc-cip
                port:
                  number: 80

