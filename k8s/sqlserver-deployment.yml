# Server=localhost,8089;Database="";User Id=sa;Password=sqlserverk8sHml;TrustServerCertificate=True;
# CONFIG MAP
apiVersion: v1
kind: ConfigMap
metadata:
  name: sqlserver-cm
  namespace: staging
data:
  # MSSQL_PID: Express
  ACCEPT_EULA: "Y"
---
# SECRET
apiVersion: v1
kind: Secret
metadata:
  name: sqlserver-sc
  namespace: staging
type: Opaque
stringData:
  MSSQL_SA_PASSWORD: sqlserverk8sHml
---
# PERSIST VOLUME
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sqlserver-pv
  namespace: staging
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/mssql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlserver-pvc
  namespace: staging
spec:
  storageClassName: local-storage
  volumeName: sqlserver-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
--- 
# DEPLOYMENT
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sqlserver
  namespace: staging
spec:
  serviceName: sqlserver
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      name: sqlserver
      labels:
        app: sqlserver
    spec:
      securityContext:
        runAsUser: 0
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-latest
        resources:
          requests:
            memory: 512Mi
            cpu: 500m
          limits:
            memory: 1024Mi
            cpu: 1000m
        ports:
        - containerPort: 1433
        envFrom:
        - configMapRef:
            name: sqlserver-cm
        - secretRef:
            name: sqlserver-sc
        volumeMounts:
        - name: sqlserverdata
          mountPath: /var/opt/mssql
      volumes:
      - name: sqlserverdata
        persistentVolumeClaim:
          claimName: sqlserver-pvc
--- 
# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: svc-sqlserver-np
  namespace: staging
spec:
  type: NodePort
  selector:
    app: sqlserver
  ports:
  - protocol: TCP 
    port: 1433
    targetPort: 1433
    nodePort: 30002
---
apiVersion: v1
kind: Service
metadata:
  name: svc-sqlserver-cip
  namespace: staging
spec:
  type: ClusterIP
  selector:
    app: sqlserver
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433

